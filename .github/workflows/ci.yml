on:
  pull_request:
  workflow_dispatch:

name: Test

jobs:
  install_latest_and_test:
    name: Install & Test (git latest)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust:
          - stable
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/extism-cli

      - name: Install lib
        if: ${{ matrix.os }} == "macos-latest"
        run: |
          sudo extism lib install --version latest --verbose

      - name: Install lib
        if: ${{ matrix.os }} == "ubuntu-latest"
        run: |
          sudo extism --github-token "" lib install --version latest --verbose
      
      - name: Test CLI
        run: |
          echo "this is a test" | extism call test/code.wasm count_vowels --stdin

  install_release_and_test:
    name: Install & Test (release)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust:
          - stable
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/extism-cli

      - name: Install lib
        if: ${{ matrix.os }} == "macos-latest"
        run: |
          sudo extism lib install --verbose

      - name: Install lib
        if: ${{ matrix.os }} == "ubuntu-latest"
        run: |
          sudo extism --github-token "" lib install --verbose

      - name: Test CLI
        run: |
          echo "this is a test" | extism call test/code.wasm count_vowels --stdin     
  go_tests:
    name: Go tests (CLI+dev)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust:
          - stable
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          check-latest: true
    
      - name: Test CLI
        run: |
          cd extism
          go test -v -race
        
      - name: Test dev
        run: |
          cd extism-dev
          go test -v -race
